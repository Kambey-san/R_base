R version 4.3.2 (2023-10-31 ucrt) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> setwd("C:/Users/Администратор/OneDrive/Документы/Alex/TEMP/Язык R для анализа данных/Урок 3. Разведочный анализ данных в R/00_HW")
> # Урок 3. Разведочный анализ данных в R/ ДЗ
> install.packages("dplyr")
Error in install.packages : Updating loaded packages

Restarting R session...

> install.packages("dplyr")
WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:

https://cran.rstudio.com/bin/windows/Rtools/
Installing package into ‘C:/Users/Администратор/AppData/Local/R/win-library/4.3’
(as ‘lib’ is unspecified)
trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/dplyr_1.1.4.zip'
Content type 'application/zip' length 1559256 bytes (1.5 MB)
downloaded 1.5 MB

package ‘dplyr’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\Администратор\AppData\Local\Temp\RtmpAXc4oL\downloaded_packages
> install.packages("ggplot2")
WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:

https://cran.rstudio.com/bin/windows/Rtools/
Installing package into ‘C:/Users/Администратор/AppData/Local/R/win-library/4.3’
(as ‘lib’ is unspecified)
also installing the dependencies ‘colorspace’, ‘farver’, ‘labeling’, ‘munsell’, ‘RColorBrewer’, ‘viridisLite’, ‘gtable’, ‘isoband’, ‘scales’


  There is a binary version available but the source version is later:
        binary source needs_compilation
ggplot2  3.4.4  3.5.0             FALSE

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/colorspace_2.1-0.zip'
Content type 'application/zip' length 2633207 bytes (2.5 MB)
downloaded 2.5 MB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/farver_2.1.1.zip'
Content type 'application/zip' length 1505907 bytes (1.4 MB)
downloaded 1.4 MB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/labeling_0.4.3.zip'
Content type 'application/zip' length 62568 bytes (61 KB)
downloaded 61 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/munsell_0.5.0.zip'
Content type 'application/zip' length 244247 bytes (238 KB)
downloaded 238 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/RColorBrewer_1.1-3.zip'
Content type 'application/zip' length 56066 bytes (54 KB)
downloaded 54 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/viridisLite_0.4.2.zip'
Content type 'application/zip' length 1300105 bytes (1.2 MB)
downloaded 1.2 MB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/gtable_0.3.4.zip'
Content type 'application/zip' length 225847 bytes (220 KB)
downloaded 220 KB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/isoband_0.2.7.zip'
Content type 'application/zip' length 1968359 bytes (1.9 MB)
downloaded 1.9 MB

trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/scales_1.3.0.zip'
Content type 'application/zip' length 703930 bytes (687 KB)
downloaded 687 KB

package ‘colorspace’ successfully unpacked and MD5 sums checked
package ‘farver’ successfully unpacked and MD5 sums checked
package ‘labeling’ successfully unpacked and MD5 sums checked
package ‘munsell’ successfully unpacked and MD5 sums checked
package ‘RColorBrewer’ successfully unpacked and MD5 sums checked
package ‘viridisLite’ successfully unpacked and MD5 sums checked
package ‘gtable’ successfully unpacked and MD5 sums checked
package ‘isoband’ successfully unpacked and MD5 sums checked
package ‘scales’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\Администратор\AppData\Local\Temp\RtmpAXc4oL\downloaded_packages
installing the source package ‘ggplot2’

trying URL 'https://cran.rstudio.com/src/contrib/ggplot2_3.5.0.tar.gz'
Content type 'application/x-gzip' length 3564967 bytes (3.4 MB)
downloaded 3.4 MB

* installing *source* package 'ggplot2' ...
** package 'ggplot2' successfully unpacked and MD5 sums checked
** using staged installation
** R
** data
*** moving datasets to lazyload DB
** inst
** byte-compile and prepare package for lazy loading
** help
*** installing help indices
*** copying figures
** building package indices
** installing vignettes
** testing if installed package can be loaded from temporary location
** testing if installed package can be loaded from final location
** testing if installed package keeps a record of temporary installation path
* DONE (ggplot2)

The downloaded source packages are in
	‘C:\Users\Администратор\AppData\Local\Temp\RtmpAXc4oL\downloaded_packages’
> library("dplyr")

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library("ggplot2")
> library(httr)
> # Скачаем файл "cardio_train.csv"
> filename <- "cardio_train.csv"
> url <- "https://drive.google.com/uc?authuser=0&id=1qPKIRO3GfGNQK7rUFpZQWQRaNhTjHvJP&export=download"
> GET(url, write_disk(filename, overwrite=TRUE))
Response [https://drive.usercontent.google.com/download?id=1qPKIRO3GfGNQK7rUFpZQWQRaNhTjHvJP&export=download]
  Date: 2024-02-24 10:34
  Status: 200
  Content-Type: application/octet-stream
  Size: 2.94 MB
<ON DISK>  C:\Users\Администратор\OneDrive\Документы\Alex\TEMP\Язык R для анализа данных\Урок 3. Разведочный анализ данных в R\00_HW\cardio_train.csv
> df = read.csv(filename, sep=";")
> head(df, 3)
  id   age gender height weight ap_hi ap_lo cholesterol gluc smoke alco active cardio
1  0 18393      2    168     62   110    80           1    1     0    0      1      0
2  1 20228      1    156     85   140    90           3    1     0    0      1      1
3  2 18857      1    165     64   130    70           3    1     0    0      0      1
> dim(df)
[1] 70000    13
> df <- df %>% mutate(age_years=trunc(age/365))
> head(df, 3)
  id   age gender height weight ap_hi ap_lo cholesterol gluc smoke alco active cardio age_years
1  0 18393      2    168     62   110    80           1    1     0    0      1      0        50
2  1 20228      1    156     85   140    90           3    1     0    0      1      1        55
3  2 18857      1    165     64   130    70           3    1     0    0      0      1        51
> # Чтобы понять, с какими данными мы имеем дело, возьмем такие характеристики из описательной статистики,
> # как среднее арифметическое и среднее квадратичное отклонение
> cat(mean(df$ap_hi), mean(df$ap_lo))
128.8173 96.63041
> cat(sd(df$ap_hi), sd(df$ap_lo))
154.0114 188.4725
> install.packages("rafalib")
WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:

https://cran.rstudio.com/bin/windows/Rtools/
Installing package into ‘C:/Users/Администратор/AppData/Local/R/win-library/4.3’
(as ‘lib’ is unspecified)
trying URL 'https://cran.rstudio.com/bin/windows/contrib/4.3/rafalib_1.0.0.zip'
Content type 'application/zip' length 56500 bytes (55 KB)
downloaded 55 KB

package ‘rafalib’ successfully unpacked and MD5 sums checked

The downloaded binary packages are in
	C:\Users\Администратор\AppData\Local\Temp\RtmpAXc4oL\downloaded_packages
> library(rafalib)
> mypar(1,2)
> box_lo <- boxplot(df$ap_lo)
> box_hi <- boxplot(df$ap_hi)
> ap_lo_capt <- "Нижнее давление"
> ap_hi_capt <- "Верхнее давление"
> # Построим боксплоты без учета выбросов, которые скорее всего были ошибкой ввода
> mypar(1, 2)
> box_lo <- boxplot(df$ap_lo[df$ap_lo<200 & df$ap_lo>20])
> title(ap_lo_capt)
> box_hi <- boxplot(df$ap_hi[df$ap_hi<300 & df$ap_hi>40])
> title(ap_hi_capt)
> median(df$ap_lo)
[1] 80
> quantile(df$ap_lo, 0.25)
25% 
 80 
> sort(df$ap_lo)[17501:35000]
   [1] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
  [45] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
  [89] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [133] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [177] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [221] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [265] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [309] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [353] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [397] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [441] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [485] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [529] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [573] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [617] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [661] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [705] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [749] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [793] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [837] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [881] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [925] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [969] 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80 80
 [ reached getOption("max.print") -- omitted 16500 entries ]
> tidy_set <- df %>% filter((ap_lo<200 & ap_lo>20) & (ap_hi<300 & ap_hi>40))
> head(tidy_set, 3)
  id   age gender height weight ap_hi ap_lo cholesterol gluc smoke alco active cardio age_years
1  0 18393      2    168     62   110    80           1    1     0    0      1      0        50
2  1 20228      1    156     85   140    90           3    1     0    0      1      1        55
3  2 18857      1    165     64   130    70           3    1     0    0      0      1        51
> # Сравним размер прежнего набора с размером нового набора с обработанными данными
> # Посмотрим значения среднего арифметического и sd для двух переменных ap_lo и ap_hi
> dim(tidy_set)
[1] 68781    14
> cat(mean(tidy_set$ap_hi), mean(tidy_set$ap_lo))
126.6153 81.37756
> cat(sd(tidy_set$ap_hi), sd(tidy_set$ap_lo))
16.76354 9.688359
> # Визуализация данных с помощью боксплота дала возможность увидеть все значения переменной и определить грубейшие выбросы (аутлайеры).
> # Теперь по гистограмме видно, что распределения стали больше
> mypar(2, 2)
> hist(df$ap_lo, main=ap_lo_capt)
> hist(tidy_set$ap_lo, main=paste(ap_lo_capt, "tidy_set"))
> hist(df$ap_hi, main=ap_hi_capt)
> hist(tidy_set$ap_hi, main=paste(ap_hi_capt, "tidy_set"))
> # Одним из самых распространенных методов проверки нормальности является QQ график
> # В основе лежит идея сравнить теоретические квантили с квантилями СВ
> qqnorm(tidy_set$ap_lo, main=ap_lo_capt)
> qqline(tidy_set$ap_lo, col="red", lwd=2)
> qqnorm(tidy_set$ap_hi, main=ap_hi_capt)
> qqline(tidy_set$ap_hi, col="red", lwd=2)
> abline(h=160, col="green")
> # Для равнения давления у мужчин и женщин, удобно построить боксплоты для каждой подгруппы, используя функцию split()
> mypar(1,2)
> groupss_lo <- split(tidy_set$ap_lo, tidy_set$gender)
> boxplot(groupss_lo)
> title(ap_lo_capt)
> groupss_hi <- split(tidy_set$ap_hi, tidy_set$gender)
> boxplot(groupss_hi)
> title(ap_hi_capt)
> 
> # Вернемся к исследованию СВ без учета пола пациента
> # Построим график плотности распределения для нижнего и верхнего артериального давления использую функцию density() и plot()
> plot(density(tidy_set$ap_lo), col=2, lwd=2, main=ap_lo_capt)
> plot(density(tidy_set$ap_hi), col=3, lwd=2, main=ap_hi_capt)
> # Разберемся в причине этих множественных пиков:
> plot(density(tidy_set$ap_lo), col=1, lwd=2, main=ap_lo_capt)
> abline(v=70, col="red")
> abline(v=60, col="red")
> abline(v=80, col="red")
> sort_lo <- sort(tidy_set$ap_lo)
> cut_1 <- sort_lo[sort_lo>65 & sort_lo<75]
> cut_1
   [1] 66 66 66 66 66 66 66 66 66 66 66 66 67 67 67 67 67 67 67 67 67 67 67 67 67 67 67 67 67 67 67 68 68 68 68 68 68 68 68 68 68 68 68 68
  [45] 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69
  [89] 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69 69
 [133] 69 69 69 69 69 69 69 69 69 69 69 69 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [177] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [221] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [265] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [309] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [353] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [397] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [441] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [485] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [529] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [573] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [617] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [661] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [705] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [749] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [793] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [837] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [881] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [925] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [969] 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70 70
 [ reached getOption("max.print") -- omitted 9446 entries ]
> 
> # Приблизительно так должно выглядеть истинное нормальное распределение давления. Чтобы это изобразить, используем аргумент adjust
> plot(density(tidy_set$ap_lo, adjust=10), col=1, lwd=2, main=ap_lo_capt)
> # Приблизительно так должно выглядеть истинное нормальное распределение давления. Чтобы это изобразить, используем аргумент adjust
> plot(density(tidy_set$ap_lo, adjust=10), col=1, lwd=2, main=ap_lo_capt)
> plot(density(tidy_set$ap_lo, adjust=10), col=1, lwd=2, main=ap_lo_capt)
> lines(density(tidy_set$ap_hi, adjust=10), col=3, lwd=2, lty=2)
> legend("topright", c("ap_lo", "ap_hi"), col=c(2, 3), lty=c(1, 2))
> # Скаттерплот
> plot(
+   tidy_set$ap_lo,
+   tidy_set$ap_hi,
+   col=2,
+   main=paste(
+     "correlation=",
+     signif(cor(tidy_set$ap_lo, tidy_set$ap_hi), 2)
+   )
+ )
> # По данному графику можно проследить тренд: с ростом нижнего артериального давления растет и нижнее артериальное давление
> plot(
+   tidy_set$ap_hi,
+   tidy_set$ap_lo,
+   pch=21,
+   bg=as.numeric(factor(tidy_set$gender)),
+   xlab=ap_hi_capt,
+   ylab=ap_lo_capt
+ )
> legend(
+   "topright",
+   levels(factor(tidy_set$gender)),
+   col=seq(along=levels(factor(tidy_set$gender))),
+   pch=15,
+   cex=1.5
+ )
> 
> plot(
+   tidy_set$weight,
+   tidy_set$height,
+   pch=21,
+   bg=as.numeric(factor(tidy_set$gender)),
+   xlab="Вес",
+   ylab="Рост"
+ )
> legend(
+   "topright",
+   levels(factor(tidy_set$gender)),
+   col=seq(along=levels(factor(tidy_set$gender))),
+   pch=15,
+   cex=1.5
+ )
> 
> # Скаттерплот также можно построить и для датафрейма
> # Это позволит определить, какие признаки несут больше всего информации
> mini_set <- tidy_set[,3:5]
> head(mini_set)
  gender height weight
1      2    168     62
2      1    156     85
3      1    165     64
4      2    169     82
5      1    156     56
6      1    151     67
> plot(mini_set, pch=21, bg=mini_set$gender)
> mini_set_1 <- tidy_set[,c(3,6,7)]
> head(mini_set_1)
  gender ap_hi ap_lo
1      2   110    80
2      1   140    90
3      1   130    70
4      2   150   100
5      1   100    60
6      1   120    80
> plot(mini_set_1, pch=21, bg=mini_set_1$gender)